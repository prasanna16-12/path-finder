declare let grid: HTMLElement;
declare let sourceBtn: HTMLElement;
declare let destinationBtn: HTMLElement;
declare let wallBtn: HTMLElement;
declare let mazeBtn: HTMLElement;
declare let bfsBtn: HTMLElement;
declare let designBtn: HTMLElement;
declare let speedSelect: HTMLElement;
declare let controlPanel: Element;
declare let source: number[];
declare let destination: number[];
declare let cols: number;
declare let rows: number;
declare let sourceStatus: 'PENDING' | 'SELECTING' | 'SELECTED';
declare let destinationStatus: 'PENDING' | 'SELECTING' | 'SELECTED';
declare let isWallSelected: boolean;
declare let draw: boolean;
declare let pathHoles: Set<string>;
declare let speed: number;
declare let pathStatus: 'NA' | 'INPROGRESS' | 'FOUND' | 'NOTFOUND';
declare function init(): void;
declare function drawWall(e: MouseEvent): void;
declare function setSpeed(e: Event): void;
declare function selectDestination(e: MouseEvent): void;
declare function selectSource(e: MouseEvent): void;
declare function whenClicked(e: MouseEvent): void;
declare function getGridSize(element: HTMLElement | null | any): number[];
declare function disableControlPanel(flag: boolean): void;
declare function bfs(e: MouseEvent): Promise<void>;
declare function maze(e: MouseEvent): Promise<void>;
declare function startDrawing(e: MouseEvent): any;
declare function drawing(e: MouseEvent): any;
declare function endDrawing(e: MouseEvent): any;
declare function design(e: MouseEvent): Promise<void>;
declare function randomColor(): string;
